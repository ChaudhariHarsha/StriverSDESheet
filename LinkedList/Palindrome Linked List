LinkedListNode<int> *reverseLinkedList(LinkedListNode<int> *head) 
{
    // Write your code here
    LinkedListNode<int>*d=NULL;
       while(head!=NULL){
          LinkedListNode<int> *next=head->next;
           head->next=d;
           d=head;
           head=next;
       }
       return d;
}

bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.
    if(!head)
        return true;
	LinkedListNode<int> *slow=head,*fast=head;
    while(fast->next && fast->next->next){
        fast=fast->next->next;
        slow=slow->next;
    }
    slow->next=reverseLinkedList(slow->next);
    slow=slow->next;
    while(slow!=NULL){
        if(slow->data != head->data)
            return false;
        slow=slow->next;
        head=head->next;
    }
    return true;
}
